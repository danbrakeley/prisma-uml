model Module {
  id                      String               @id @default(cuid())
  slug                    String               @unique @default(cuid())
  title                   String?
  description             String?
  courses                 Course[]             @relation(references: [id])
  unlockedInTrainings     Training[]           @relation(references: [id])
  lessons                 Lesson[]
  links                   Link[]
  creator                 User                 @relation("createdModules", fields: [creatorId], references: [id])
  creatorId               String
  sharedWith              User[]               @relation("sharedModules", references: [id])
  isSharedWithAllTrainers Boolean
  isSharedWithAllUsers    Boolean
  userTrainingSessionId   String?
  UserTrainingSession     UserTrainingSession? @relation(fields: [userTrainingSessionId], references: [id])
}

model User {
  id                    String                @id @default(cuid())
  email                 String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  role                  Role
  enabled               Boolean
  fullName              String
  location              String?
  referred              String?
  companyName           String?
  password              String
  createdTrainings      Training[]            @relation("createdTrainings")
  attendedTrainings     UserTrainingSession[] @relation("userTrainingSession")
  createdCourses        Course[]              @relation("createdCourses")
  sharedCourses         Course[]              @relation("sharedCourses", references: [id])
  createdModules        Module[]              @relation("createdModules")
  sharedModules         Module[]              @relation("sharedModules", references: [id])
  sentCourseInvites     CourseInvite[]        @relation("fromUserCourse")
  receivedCourseInvites CourseInvite[]        @relation("toUserCourses")
  Course                Course[]
  CourseInvite          CourseInvite[]        @relation("fromUserCourses")
}

model Course {
  id                      String         @id @default(cuid())
  slug                    String         @unique @default(cuid())
  modules                 Module[]       @relation(references: [id])
  title                   String
  trainings               Training[]
  creator                 User           @relation(fields: [creatorId], references: [id])
  creatorId               String
  sharedWith              User[]         @relation("sharedCourses", references: [id])
  isSharedWithAllTrainers Boolean
  isSharedWithAllUsers    Boolean
  modulesIdByOrder        String
  invites                 CourseInvite[] @relation("courseInvite")
  userId                  String?
  User                    User?          @relation("createdCourses", fields: [userId], references: [id])
}

model CourseInvite {
  id         String  @id @default(cuid())
  fromUser   User    @relation("fromUserCourses", fields: [fromUserId], references: [id])
  toUser     User    @relation("toUserCourses", fields: [toUserId], references: [id])
  fromUserId String
  toUserId   String
  course     Course  @relation("courseInvite", fields: [courseId], references: [id])
  courseId   String
  userId     String?
  User       User?   @relation("fromUserCourse", fields: [userId], references: [id])
}

model Lesson {
  id                    String               @id @default(cuid())
  slug                  String               @unique @default(cuid())
  title                 String
  markdown              String
  embedUrl              String
  module                Module               @relation(fields: [moduleId], references: [id])
  moduleId              String
  order                 Int?
  userTrainingSessionId String?
  UserTrainingSession   UserTrainingSession? @relation(fields: [userTrainingSessionId], references: [id])
}

model Link {
  id       String @id @default(cuid())
  url      String
  title    String
  module   Module @relation(fields: [moduleId], references: [id])
  moduleId String
}

model UserTrainingSession {
  id               String   @id @default(cuid())
  user             User     @relation("userTrainingSession", fields: [userId], references: [id])
  userId           String
  training         Training @relation("trainingSession", fields: [trainingId], references: [id])
  trainingId       String
  completedModules Module[]
  completedLessons Lesson[]
}

model Training {
  id              String                @id @default(cuid())
  slug            String                @unique @default(cuid())
  dateEnd         DateTime?
  dateStart       DateTime?
  name            String?
  course          Course?               @relation(fields: [courseId], references: [id])
  courseId        String?
  createdBy       User                  @relation("createdTrainings", fields: [createdById], references: [id])
  createdById     String
  attendingUsers  UserTrainingSession[] @relation("trainingSession")
  unlockedModules Module[]              @relation(references: [id])
  secretKey       String                @unique
  type            TrainingType
}

enum Role {
  ADMIN
  USER
  CREATOR
}

enum TrainingType {
  ONLINE
  INPERSON
  COURSE
}
